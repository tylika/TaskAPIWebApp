// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAPIWebApp;

#nullable disable

namespace TaskAPIWebApp.Migrations
{
    [DbContext(typeof(TaskManagementApiContext))]
    partial class TaskManagementApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskAPIWebApp.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskSubmissionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Comments__3214EC07EECCFD81");

                    b.HasIndex("TaskId");

                    b.HasIndex("TaskSubmissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.GroupMember", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TaskGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JoinedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Member");

                    b.HasKey("UserId", "TaskGroupId");

                    b.HasIndex("TaskGroupId");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Draft");

                    b.Property<int?>("TaskGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tasks__3214EC07B86B8AC2");

                    b.HasIndex("TaskGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__TaskAtta__3214EC07949F78C3");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskAttachments");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TaskGrou__3214EC072BED5930");

                    b.HasIndex("UserId");

                    b.ToTable("TaskGroups");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("Submission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TaskSubm__3214EC076FD042DB");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskSubmissions");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07B74163D8");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.Comment", b =>
                {
                    b.HasOne("TaskAPIWebApp.Models.Task", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Comments_Tasks");

                    b.HasOne("TaskAPIWebApp.Models.TaskSubmission", "TaskSubmission")
                        .WithMany("Comments")
                        .HasForeignKey("TaskSubmissionId")
                        .HasConstraintName("FK_Comments_TaskSubmissions");

                    b.HasOne("TaskAPIWebApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Comments_Users");

                    b.Navigation("Task");

                    b.Navigation("TaskSubmission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.GroupMember", b =>
                {
                    b.HasOne("TaskAPIWebApp.Models.TaskGroup", "TaskGroup")
                        .WithMany("GroupMembers")
                        .HasForeignKey("TaskGroupId")
                        .IsRequired()
                        .HasConstraintName("FK_GroupMembers_TaskGroups");

                    b.HasOne("TaskAPIWebApp.Models.User", "User")
                        .WithMany("GroupMembers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_GroupMembers_Users");

                    b.Navigation("TaskGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.Task", b =>
                {
                    b.HasOne("TaskAPIWebApp.Models.TaskGroup", "TaskGroup")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskGroupId")
                        .HasConstraintName("FK_Tasks_TaskGroups");

                    b.HasOne("TaskAPIWebApp.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Tasks_Users");

                    b.Navigation("TaskGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskAttachment", b =>
                {
                    b.HasOne("TaskAPIWebApp.Models.Task", "Task")
                        .WithMany("TaskAttachments")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskAttachments_Tasks");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskGroup", b =>
                {
                    b.HasOne("TaskAPIWebApp.Models.User", "User")
                        .WithMany("TaskGroups")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskGroups_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskSubmission", b =>
                {
                    b.HasOne("TaskAPIWebApp.Models.Task", "Task")
                        .WithMany("TaskSubmissions")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskSubmissions_Tasks");

                    b.HasOne("TaskAPIWebApp.Models.User", "User")
                        .WithMany("TaskSubmissions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskSubmissions_Users");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.Task", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("TaskAttachments");

                    b.Navigation("TaskSubmissions");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskGroup", b =>
                {
                    b.Navigation("GroupMembers");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.TaskSubmission", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("TaskAPIWebApp.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("GroupMembers");

                    b.Navigation("TaskGroups");

                    b.Navigation("TaskSubmissions");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
